module DeviseTokenAuth
  class ApplicationController < DeviseController
    include DeviseTokenAuth::Concerns::SetUserByToken

    @resource: ::User

    def resource_data: (?::Hash[untyped, untyped] opts) -> untyped

    def resource_errors: () -> untyped

    def blacklisted_redirect_url?: (untyped redirect_url) -> untyped

    def build_redirect_headers: (untyped access_token, untyped client, ?::Hash[untyped, untyped] redirect_header_options) -> untyped

    def params_for_resource: (untyped resource) -> untyped

    def resource_class: (?untyped? m) -> untyped

    def json_api?: () -> (false | untyped)

    def recoverable_enabled?: () -> untyped

    def confirmable_enabled?: () -> untyped

    def render_error: (untyped status, untyped message, ?untyped? data) -> untyped

    def success_message: (untyped name, untyped email) -> untyped

    # When using a cookie to transport the auth token we can set it immediately in flows such as
    # reset password and OmniAuth success, rather than making the client scrape the token from
    # query params (to then send in the initial validate_token request).
    # TODO: We should be able to stop exposing the token in query params when this method is used
    def set_token_in_cookie: (untyped resource, untyped token) -> untyped
  end
end

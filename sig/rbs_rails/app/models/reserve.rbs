class Reserve < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Reserve, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def office_id: () -> Integer

    def office_id=: (Integer) -> Integer

    def office_id?: () -> bool

    def office_id_changed?: () -> bool

    def office_id_change: () -> [ Integer?, Integer? ]

    def office_id_will_change!: () -> void

    def office_id_was: () -> Integer?

    def office_id_previously_changed?: () -> bool

    def office_id_previous_change: () -> Array[Integer?]?

    def office_id_previously_was: () -> Integer?

    def office_id_before_last_save: () -> Integer?

    def office_id_change_to_be_saved: () -> Array[Integer?]?

    def office_id_in_database: () -> Integer?

    def saved_change_to_office_id: () -> Array[Integer?]?

    def saved_change_to_office_id?: () -> bool

    def will_save_change_to_office_id?: () -> bool

    def restore_office_id!: () -> void

    def clear_office_id_change: () -> void

    def client_id: () -> Integer

    def client_id=: (Integer) -> Integer

    def client_id?: () -> bool

    def client_id_changed?: () -> bool

    def client_id_change: () -> [ Integer?, Integer? ]

    def client_id_will_change!: () -> void

    def client_id_was: () -> Integer?

    def client_id_previously_changed?: () -> bool

    def client_id_previous_change: () -> Array[Integer?]?

    def client_id_previously_was: () -> Integer?

    def client_id_before_last_save: () -> Integer?

    def client_id_change_to_be_saved: () -> Array[Integer?]?

    def client_id_in_database: () -> Integer?

    def saved_change_to_client_id: () -> Array[Integer?]?

    def saved_change_to_client_id?: () -> bool

    def will_save_change_to_client_id?: () -> bool

    def restore_client_id!: () -> void

    def clear_client_id_change: () -> void

    def interview_begin_at: () -> ActiveSupport::TimeWithZone

    def interview_begin_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def interview_begin_at?: () -> bool

    def interview_begin_at_changed?: () -> bool

    def interview_begin_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def interview_begin_at_will_change!: () -> void

    def interview_begin_at_was: () -> ActiveSupport::TimeWithZone?

    def interview_begin_at_previously_changed?: () -> bool

    def interview_begin_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def interview_begin_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def interview_begin_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def interview_begin_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def interview_begin_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_interview_begin_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_interview_begin_at?: () -> bool

    def will_save_change_to_interview_begin_at?: () -> bool

    def restore_interview_begin_at!: () -> void

    def clear_interview_begin_at_change: () -> void

    def interview_end_at: () -> ActiveSupport::TimeWithZone

    def interview_end_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def interview_end_at?: () -> bool

    def interview_end_at_changed?: () -> bool

    def interview_end_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def interview_end_at_will_change!: () -> void

    def interview_end_at_was: () -> ActiveSupport::TimeWithZone?

    def interview_end_at_previously_changed?: () -> bool

    def interview_end_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def interview_end_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def interview_end_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def interview_end_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def interview_end_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_interview_end_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_interview_end_at?: () -> bool

    def will_save_change_to_interview_end_at?: () -> bool

    def restore_interview_end_at!: () -> void

    def clear_interview_end_at_change: () -> void

    def user_name: () -> String

    def user_name=: (String) -> String

    def user_name?: () -> bool

    def user_name_changed?: () -> bool

    def user_name_change: () -> [ String?, String? ]

    def user_name_will_change!: () -> void

    def user_name_was: () -> String?

    def user_name_previously_changed?: () -> bool

    def user_name_previous_change: () -> Array[String?]?

    def user_name_previously_was: () -> String?

    def user_name_before_last_save: () -> String?

    def user_name_change_to_be_saved: () -> Array[String?]?

    def user_name_in_database: () -> String?

    def saved_change_to_user_name: () -> Array[String?]?

    def saved_change_to_user_name?: () -> bool

    def will_save_change_to_user_name?: () -> bool

    def restore_user_name!: () -> void

    def clear_user_name_change: () -> void

    def user_age: () -> Integer

    def user_age=: (Integer) -> Integer

    def user_age?: () -> bool

    def user_age_changed?: () -> bool

    def user_age_change: () -> [ Integer?, Integer? ]

    def user_age_will_change!: () -> void

    def user_age_was: () -> Integer?

    def user_age_previously_changed?: () -> bool

    def user_age_previous_change: () -> Array[Integer?]?

    def user_age_previously_was: () -> Integer?

    def user_age_before_last_save: () -> Integer?

    def user_age_change_to_be_saved: () -> Array[Integer?]?

    def user_age_in_database: () -> Integer?

    def saved_change_to_user_age: () -> Array[Integer?]?

    def saved_change_to_user_age?: () -> bool

    def will_save_change_to_user_age?: () -> bool

    def restore_user_age!: () -> void

    def clear_user_age_change: () -> void

    def contact_tel: () -> String

    def contact_tel=: (String) -> String

    def contact_tel?: () -> bool

    def contact_tel_changed?: () -> bool

    def contact_tel_change: () -> [ String?, String? ]

    def contact_tel_will_change!: () -> void

    def contact_tel_was: () -> String?

    def contact_tel_previously_changed?: () -> bool

    def contact_tel_previous_change: () -> Array[String?]?

    def contact_tel_previously_was: () -> String?

    def contact_tel_before_last_save: () -> String?

    def contact_tel_change_to_be_saved: () -> Array[String?]?

    def contact_tel_in_database: () -> String?

    def saved_change_to_contact_tel: () -> Array[String?]?

    def saved_change_to_contact_tel?: () -> bool

    def will_save_change_to_contact_tel?: () -> bool

    def restore_contact_tel!: () -> void

    def clear_contact_tel_change: () -> void

    def note: () -> String?

    def note=: (String?) -> String?

    def note?: () -> bool

    def note_changed?: () -> bool

    def note_change: () -> [ String?, String? ]

    def note_will_change!: () -> void

    def note_was: () -> String?

    def note_previously_changed?: () -> bool

    def note_previous_change: () -> Array[String?]?

    def note_previously_was: () -> String?

    def note_before_last_save: () -> String?

    def note_change_to_be_saved: () -> Array[String?]?

    def note_in_database: () -> String?

    def saved_change_to_note: () -> Array[String?]?

    def saved_change_to_note?: () -> bool

    def will_save_change_to_note?: () -> bool

    def restore_note!: () -> void

    def clear_note_change: () -> void

    def is_contacted: () -> bool?

    def is_contacted=: (bool?) -> bool?

    def is_contacted?: () -> bool

    def is_contacted_changed?: () -> bool

    def is_contacted_change: () -> [ bool?, bool? ]

    def is_contacted_will_change!: () -> void

    def is_contacted_was: () -> bool?

    def is_contacted_previously_changed?: () -> bool

    def is_contacted_previous_change: () -> Array[bool?]?

    def is_contacted_previously_was: () -> bool?

    def is_contacted_before_last_save: () -> bool?

    def is_contacted_change_to_be_saved: () -> Array[bool?]?

    def is_contacted_in_database: () -> bool?

    def saved_change_to_is_contacted: () -> Array[bool?]?

    def saved_change_to_is_contacted?: () -> bool

    def will_save_change_to_is_contacted?: () -> bool

    def restore_is_contacted!: () -> void

    def clear_is_contacted_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def office: () -> Office
  def office=: (Office?) -> Office?
  def reload_office: () -> Office?
  def build_office: (untyped) -> Office
  def create_office: (untyped) -> Office
  def create_office!: (untyped) -> Office
  def client: () -> Client
  def client=: (Client?) -> Client?
  def reload_client: () -> Client?
  def build_client: (untyped) -> Client
  def create_client: (untyped) -> Client
  def create_client!: (untyped) -> Client
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Reserve, Integer]
    include Enumerable[Reserve]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Reserve, Integer]
  end
end

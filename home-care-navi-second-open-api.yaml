openapi: 3.0.3
x-stoplight:
  id: oyf2pt1k0zz67
info:
  title: home-care-navi-second
  version: '1.0'
  description: 2期のホームケアナビのAPI仕様書
  contact:
    name: 平林直樹
    url: 'https://example.com'
    email: test@example.com
  license:
    name: MIT
    url: 'https://example.com'
  termsOfService: hogehgoe@example.com
servers:
  - url: 'http://localhost:3000'
    description: ローカル開発環境
  - url: 'https://api.home-care-navi-second-api.fun:4000'
    description: AWS開発環境
  - url: 'https://api.home-care-navi-second-api.fun:3000'
    description: AWS本番環境
paths:
  /health_check:
    get:
      summary: ヘルスチェック
      tags:
        - health_check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: API Health Check OK
                    description: メッセージに意味は無し
                required:
                  - message
      operationId: getHealthCheck
      description: ECSのヘルスチェック用エンドポイント
  /api/v1/auth:
    post:
      summary: ユーザー新規作成
      operationId: signUp
      description: ユーザーを新規登録する。typeの値によって、ユーザーの種別(事務所利用者等)が決定する。
      responses:
        '200':
          $ref: '#/components/responses/AuthSuccess'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  data:
                    type: object
                    required:
                      - id
                      - provider
                      - uid
                      - allow_password_change
                      - name
                      - email
                      - tel
                      - address
                      - postal
                      - created_at
                      - updated_at
                      - type
                    properties:
                      id:
                        type: string
                        nullable: true
                      provider:
                        type: string
                        example: email
                        nullable: true
                      uid:
                        type: string
                        nullable: true
                      allow_password_change:
                        type: boolean
                        default: false
                      name:
                        type: string
                        example: テスト　太郎
                        nullable: true
                      email:
                        type: string
                        example: test@example.com
                        nullable: true
                      tel:
                        type: string
                        example: 000-1111-2222
                        nullable: true
                      address:
                        type: string
                        example: 東京都新宿区市ヶ谷本村町5番1号
                        nullable: true
                      postal:
                        type: string
                        example: '1234567'
                        nullable: true
                      created_at:
                        type: string
                        nullable: true
                      updated_at:
                        type: string
                        nullable: true
                      type:
                        type: string
                        example: Client
                        nullable: true
                  errors:
                    type: object
                    required:
                      - full_messages
                    properties:
                      full_messages:
                        type: array
                        items:
                          type: string
                          example: メールアドレスはすでに存在します
                required:
                  - status
                  - data
                  - errors
              examples:
                example-1:
                  value:
                    status: error
                    data:
                      id: null
                      provider: email
                      uid: string
                      allow_password_change: false
                      name: テスト　太郎
                      email: test@example.com
                      tel: 000-1111-2223
                      address: 東京都新宿区市ヶ谷本村町5番1号
                      postal: '1234567'
                      created_at: null
                      updated_at: null
                      type: Client
                    errors:
                      full_messages:
                        - メールアドレスはすでに存在します
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 名前
                  example: テスト 太郎
                email:
                  type: string
                  format: email
                  example: test@example.com
                  description: メールアドレス
                tel:
                  type: string
                  description: 電話番号
                  example: 090-1111-2222
                  pattern: '^0[-0-9]{11,12}$'
                postal:
                  type: string
                  example: '1234567'
                  pattern: '^\d{7}$'
                  description: 郵便番号
                  maxLength: 7
                address:
                  type: string
                  example: 東京都新宿区市ヶ谷本村町5番1号
                  description: 住所
                password:
                  type: string
                  example: password
                  description: パスワード
                type:
                  type: string
                  example: Client
                  description: STIによるユーザー識別文字列
                confirm_success_url:
                  type: string
                  format: uri
                  example: 'http://localhost:8080'
                  description: アカウント登録メールに記載されるURL。clientならトップページ、managerならスタッフ情報ページのURLとする。
              required:
                - name
                - email
                - tel
                - postal
                - address
                - password
                - type
                - confirm_success_url
            examples:
              client sign_up:
                value:
                  name: テスト 太郎
                  email: client@example.com
                  tel: 090-1111-2222
                  postal: '1234567'
                  address: 東京都新宿区市ヶ谷本村町5番1号
                  password: password
                  type: Client
                  confirm_success_url: 'http://localhost:8080/client/login'
              manager sign_up:
                value:
                  name: テスト 太郎
                  email: manager@example.com
                  tel: 090-1111-2222
                  postal: '1234567'
                  address: 東京都新宿区市ヶ谷本村町5番1号
                  password: password
                  type: Manager
                  confirm_success_url: 'http://localhost:8080/manager/login'
    parameters: []
    patch:
      summary: 登録者情報更新
      operationId: updateAuth
      responses:
        '200':
          $ref: '#/components/responses/AuthSuccess'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                    description: 成功判定
                  errors:
                    type: array
                    description: エラーメッセージ
                    example:
                      - ユーザーが見つかりません
                    items:
                      type: string
                  status:
                    type: string
                    example: error
                    description: エラー表示
                required:
                  - success
                  - errors
                  - status
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  errors:
                    type: object
                    required:
                      - full_messages
                    properties:
                      full_messages:
                        example:
                          - 現在のパスワードを入力してください
                        type: array
                        items:
                          type: string
                required:
                  - status
                  - errors
              examples:
                example-1:
                  value:
                    status: error
                    errors:
                      full_messages:
                        - 現在のパスワードを入力してください
      tags:
        - auth
      description: 登録者情報を更新する
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 新規　名前
                email:
                  type: string
                  example: new@example.com
                tel:
                  type: string
                  example: 111-2222-3333
                postal:
                  type: string
                  example: '1112222'
                address:
                  type: string
                  example: 東京都新宿区市ヶ谷本村町5番1号
                current_password:
                  type: string
                  example: password
                password:
                  type: string
                  example: new-password
                password_confirmation:
                  type: string
                  example: new-password
              required:
                - name
                - email
                - tel
                - postal
                - address
                - current_password
            examples:
              example-1:
                value:
                  name: 新規　名前
                  email: new@example.com
                  tel: 111-2222-3333
                  postal: '1112222'
                  address: 東京都新宿区市ヶ谷本村町5番1号
                  password: new-password
                  current_password: password
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/expiry'
        - $ref: '#/components/parameters/uid'
    delete:
      summary: 退会
      operationId: deleteAuth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: succss
                    description: ステータス
                  message:
                    type: string
                    example: von.heaney@example.org' のアカウントは削除されました。
                    description: メッセージ
                required:
                  - status
                  - message
              examples:
                example-1:
                  value:
                    status: succss
                    message: von.heaney@example.org' のアカウントは削除されました。
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: 削除するアカウントが見つかりません
                  status:
                    type: string
                    example: error
                required:
                  - success
                  - errors
                  - status
              examples:
                example-1:
                  value:
                    success: false
                    errors:
                      - 削除するアカウントが見つかりません
                    status: error
      tags:
        - auth
      description: 退会する
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/expiry'
        - $ref: '#/components/parameters/uid'
  /api/v1/auth/validate_token:
    get:
      summary: トークン検証
      operationId: validateToken
      description: 'ヘッダー内のaccess-token,client,expiry,uidを検証する'
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/expiry'
        - $ref: '#/components/parameters/uid'
      responses:
        '200':
          $ref: '#/components/responses/AuthSuccess'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: ログイン用の認証情報が正しくありません。
                required:
                  - success
                  - errors
              examples:
                example-1:
                  value:
                    success: false
                    errors:
                      - ログイン用の認証情報が正しくありません。
      tags:
        - auth
    parameters: []
  /api/v1/auth/sign_in:
    post:
      summary: ユーザーログイン
      operationId: signIn
      description: ユーザーログイン
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                email:
                  type: string
                  format: email
                  example: test1@example.com
                  description: メールアドレス
                password:
                  type: string
                  example: password
                  description: パスワード
                type:
                  type: string
                  example: Client
                  description: ユーザーの種別
              required:
                - email
                - password
                - type
            examples:
              client login:
                value:
                  email: client@example.com
                  password: password
                  type: Client
              manager login:
                value:
                  email: manager@example.com
                  password: password
                  type: Manager
          application/xml:
            schema:
              type: object
              properties: {}
      responses:
        '200':
          $ref: '#/components/responses/AuthSuccess'
          additionalProperties: false
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: ログイン用の認証情報が正しくありません。再度お試しください
                required:
                  - success
                  - errors
              examples:
                example-1:
                  value:
                    success: false
                    errors:
                      - ログイン用の認証情報が正しくありません。再度お試しください
      tags:
        - auth
    parameters: []
  /api/v1/auth/sign_out:
    delete:
      summary: ログアウト
      operationId: signOut
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                    description: 成功判定
                    readOnly: true
                required:
                  - success
              examples:
                example-1:
                  value:
                    success: true
      description: 'ヘッダーに`access-token`,`uid`,`client`必須。ログアウトする。'
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/expiry'
        - $ref: '#/components/parameters/uid'
    parameters: []
  /api/v1/auth/password:
    post:
      summary: パスワードリセット要求
      operationId: requestPasswordReset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  message:
                    type: string
                    example: '''venita@example.org'' にパスワードリセットの案内が送信されました。'
                required:
                  - success
                  - message
              examples:
                example-1:
                  value:
                    success: true
                    message: '''venita@example.org'' にパスワードリセットの案内が送信されました。'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  errors:
                    type: array
                    items:
                      type: string
                      example: メールアドレス 'invalid@example.com' のユーザーが見つかりません。
                required:
                  - success
                  - errors
              examples:
                example-1:
                  value:
                    success: false
                    errors:
                      - メールアドレス 'invalid@example.com' のユーザーが見つかりません。
      description: パラメータのメールアドレスにパスワードリセットメールを送信する。
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: myaddress@example.com
                  format: email
                  description: ユーザーがメールアドレスフォームに入力した値
              required:
                - email
    parameters: []
    patch:
      summary: パスワードリセット
      operationId: confirmPasswordReset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
                    example: パスワードの更新に成功しました
                    description: 成功メッセージ
                required:
                  - success
                  - data
                  - message
              examples:
                example-1:
                  value:
                    success: true
                    data:
                      id: 1
                      name: テスト 太郎
                      email: test@example.com
                      tel: 090-1111-2222
                      postal: '1234567'
                      address: 東京都新宿区市ヶ谷本村町5番1号
                      type: Client
                      provider: email
                      uid: test1@example.com
                      allow_password_change: false
                    message: パスワードの更新に成功しました
            application/xml:
              schema:
                type: object
                properties: {}
          headers:
            access-token:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
            expiry:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  errors:
                    type: array
                    example:
                      - Unauthorized
                    items:
                      type: string
                required:
                  - success
                  - errors
              examples:
                example-1:
                  value:
                    success: false
                    errors:
                      - Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  errors:
                    type: object
                    properties:
                      full_messages:
                        type: array
                        example:
                          - パスワード（確認用）とパスワードの入力が一致しません
                        description: エラーメッセージ
                        items:
                          type: string
                    required:
                      - full_messages
                required:
                  - success
      tags:
        - auth
      description: パスワードリセットを確定する。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: new_password
                  description: 新規パスワード
                password_confirmation:
                  type: string
                  example: new_password
                  description: 新規パスワード確認
              required:
                - password
                - password_confirmation
        description: 'ヘッダーにclient,access-token,uid。ボディにpassword,password_confirmationが必須。'
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/uid'
  /api/v1/client/offices/area_search:
    get:
      summary: 事業所エリア検索(事業所利用者)
      tags:
        - office
      operationId: getClientOfficesAreaSearch
      description: 事業所一覧をエリア検索する
      parameters:
        - schema:
            type: string
            example: 札幌市北区北十条西
          in: query
          name: q
          description: エリアの文字列
          required: true
        - schema:
            type: integer
            example: 2
          in: query
          name: page
          description: 要求するページ番号。この項目が無い場合は自動的に1ページ目が返ってくる
      responses:
        '200':
          $ref: '#/components/responses/SearchResult'
    parameters: []
  /api/v1/client/offices/word_search:
    get:
      summary: 事業所全文一致検索(事業所利用者)
      tags:
        - office
      operationId: getClientOfficesSearch
      description: 事業所一覧を取得する。全文一致で絞り込む。
      parameters:
        - schema:
            type: string
            example: 祖師谷ケアパーク
          in: query
          name: q
          description: 検索単語
          required: true
        - schema:
            type: integer
            example: 2
          in: query
          name: page
          description: 要求するページ番号。この項目が無い場合は自動的に1ページ目が返ってくる
      responses:
        '200':
          $ref: '#/components/responses/SearchResult'
    parameters: []
  /api/v1/client/offices/nearest_search:
    get:
      summary: 事業所現在地検索(事業所利用者)
      tags:
        - office
      operationId: getClientOfficesNearest
      description: 事業所一覧を取得する。現在地で絞り込む。
      parameters:
        - schema:
            type: number
          in: query
          name: lat
          description: 緯度
          required: true
        - schema:
            type: number
          in: query
          name: lng
          description: 経度
          required: true
        - schema:
            type: integer
            example: 2
          in: query
          name: page
          description: 要求するページ番号。この項目が無い場合は自動的に1ページ目が返ってくる
      responses:
        '200':
          $ref: '#/components/responses/SearchResult'
    parameters: []
  '/api/v1/client/office/{id}':
    get:
      summary: 事業所詳細取得(事業所利用者)
      tags:
        - office
      responses:
        '200':
          description: OK
      operationId: getClientOffice
      description: 単一の事務所の詳細を取得する
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 1
          format: int64
        description: 対象のid
  /api/v1/manager/office:
    get:
      summary: 事業所詳細取得(ケアマネ)
      tags:
        - office
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                全画像作成済みパターン:
                  value:
                    id: 1
                    name: ホームケア事務所_1
                    feature_title: 事業所紹介タイトル
                    feature_detail: ここに事業所の特徴テキストが入ります
                    workday:
                      - mon
                      - tue
                      - wed
                      - thu
                      - fri
                    workday_detail: 営業日時についてのテキストが入ります
                    lat: '43.073211'
                    lng: '41.350427'
                    fax: 111-2222-3333
                    nearest_station: 北12条駅 徒歩5分
                    thumbnail_image:
                      id: 1
                      role: thumbnail
                      image_url: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
                    feature_images:
                      - id: 2
                        caption: 画像の特徴テキストが入ります1
                        role: feature
                        image_url: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
                      - id: 3
                        caption: 画像の特徴テキストが入ります2
                        role: feature
                        image_url: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
                    carousel_images:
                      - id: 4
                        role: carousel
                        image_url: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
                      - id: 5
                        role: carousel
                        image_url: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
                      - id: 6
                        role: carousel
                        image_url: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
                      - id: 7
                        role: carousel
                        image_url: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
                      - id: 8
                        role: carousel
                        image_url: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
                全画像未作成パターン:
                  value:
                    id: 1
                    name: ホームケア事務所_1
                    feature_title: 事業所紹介タイトル
                    feature_detail: ここに事業所の特徴テキストが入ります
                    workday:
                      - mon
                      - tue
                      - wed
                      - thu
                      - fri
                    workday_detail: 営業日時についてのテキストが入ります
                    lat: '43.073211'
                    lng: '41.350427'
                    fax: 111-2222-3333
                    nearest_station: 北12条駅 徒歩5分
                    thumbnail_image: null
                    feature_images: []
                    carousel_images: []
              schema:
                allOf:
                  - $ref: '#/components/schemas/Office'
                  - type: object
                    properties:
                      thumbnail_image:
                        anyOf:
                          - $ref: '#/components/schemas/OfficeImage'
                          - type: object
                            nullable: true
                            description: 未作成の場合はnullが返ってくる
                      feature_images:
                        anyOf:
                          - items:
                              $ref: '#/components/schemas/OfficeImage'
                          - maxItems: 0
                            description: 未作成の場合は空配列が返ってくる
                            items: {}
                        type: array
                      carousel_images:
                        anyOf:
                          - items:
                              $ref: '#/components/schemas/OfficeImage'
                          - maxItems: 0
                            description: 未作成の場合は空配列が返ってくる
                            items: {}
                        type: array
      operationId: getManagerOffice
      description: Manager自身の事務所詳細を取得する
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/expiry'
        - $ref: '#/components/parameters/uid'
    parameters: []
    patch:
      summary: 事業所更新(ケアマネ)
      operationId: updateManagerOffice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office'
              examples:
                example-1:
                  value:
                    id: 1
                    manager_id: 5
                    name: ホームケア事務所_1
                    feature_title: 事業所紹介タイトル
                    feature_detail: ここに事業所の特徴テキストが入ります
                    workday:
                      - mon
                    workday_detail: 営業日時についてのテキストが入ります
                    lat: '43.073211'
                    lng: '41.350427'
                    fax: 111-2222-3333
                    nearest_station: 北12条駅 徒歩5分
                    created_at: string
                    updated_at: string
        '400':
          $ref: '#/components/responses/BadRequest'
      tags:
        - office
      description: Manager自身の事務所を更新する
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/expiry'
        - $ref: '#/components/parameters/uid'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 新事業所名
                  example: ニューホームケア
                feature_title:
                  type: string
                  description: 新事業所タイトル
                  example: 新しいタイトルです
                feature_detail:
                  type: string
                  description: 新事業所詳細
                  example: 新しい詳細です
                workday:
                  type: array
                  description: 新事業所営業曜日
                  items:
                    type: string
                    enum:
                      - sun
                      - mon
                      - tue
                      - wed
                      - thu
                      - fri
                      - sat
                workday_detail:
                  type: string
                  example: 新営業日テキスト
                  description: 新営業日テキスト
                fax:
                  type: string
                  description: 新FAX番号
                  example: 111-1111-1111
            examples:
              Example 1:
                value:
                  name: ニューホームケア
                  feature_title: 新しいタイトルです
                  feature_detail: 新しい詳細です
                  workday:
                    - mon
                    - tue
                    - wed
                    - thu
                    - fri
                  workday_detail: 新営業日テキスト
                  fax: 111-1111-1111
  /api/v1/manager/office_overview:
    parameters: []
    patch:
      summary: 施設概要更新(ケアマネ)
      operationId: updateManagerOfficeOverview
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeOverview'
              examples:
                example-1:
                  value:
                    id: 1
                    office_id: 3
                    classify: 介護付きホーム（サービス付き高齢者向け住宅　特定施設）
                    opening_date: '2022-03-11'
                    room_count: 30
                    requirements: 満60歳以上の方、入居時自立・要支援・要介護
                    shared_facilities: エントランス、食堂兼機能訓練室、個浴、大浴場、特殊浴槽、和室、談話室、シアタールーム、屋上庭園
                    business_entity: 株式会社ユニマット　リタイアメント・コミュニティ
                    official_site_url: 'https://www.unimat-rc.co.jp/shisetsu/sosigaya_871/index.html'
                    created_at: '2022-10-29T18:22:43.829+09:00'
                    updated_at: '2022-10-29T18:22:43.829+09:00'
        '400':
          $ref: '#/components/responses/BadRequest'
      description: Manager自身の施設概要を更新する
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                classify:
                  type: string
                  description: 類型
                  example: 介護付きホーム（サービス付き高齢者向け住宅　特定施設）
                opening_date:
                  type: string
                  description: 開設年月
                  example: '2022-03-11'
                  format: date
                room_count:
                  type: integer
                  description: 居室数
                  example: 30
                requirements:
                  type: string
                  description: 入居時の要件
                  example: 満60歳以上の方、入居時自立・要支援・要介護
                shared_facilities:
                  type: string
                  description: 共用設備
                  example: エントランス、食堂兼機能訓練室、個浴、大浴場、特殊浴槽、和室、談話室、シアタールーム、屋上庭園
                business_entity:
                  type: string
                  description: 経営・事業主体
                  example: 株式会社ユニマット　リタイアメント・コミュニティ
                official_site_url:
                  type: string
                  description: 公式サイトのURL
                  example: 'https://www.unimat-rc.co.jp/shisetsu/sosigaya_871/index.html'
                  format: uri
              required:
                - classify
                - opening_date
                - room_count
                - requirements
                - shared_facilities
                - business_entity
                - official_site_url
            examples:
              example-1:
                value:
                  classify: 介護付きホーム（サービス付き高齢者向け住宅　特定施設）
                  opening_date: '2022-03-11'
                  room_count: 30
                  requirements: 満60歳以上の方、入居時自立・要支援・要介護
                  shared_facilities: エントランス、食堂兼機能訓練室、個浴、大浴場、特殊浴槽、和室、談話室、シアタールーム、屋上庭園
                  business_entity: 株式会社ユニマット　リタイアメント・コミュニティ
                  official_site_url: 'https://www.unimat-rc.co.jp/shisetsu/sosigaya_871/index.html'
        description: ''
      tags:
        - office_overview
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/expiry'
        - $ref: '#/components/parameters/uid'
    get:
      summary: 施設概要取得（ケアマネ）
      operationId: getManagerOfficeOverview
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeOverview'
              examples:
                example-1:
                  value:
                    id: 1
                    office_id: 3
                    classify: 介護付きホーム（サービス付き高齢者向け住宅　特定施設）
                    opening_date: '2022-03-11'
                    room_count: 30
                    requirements: 満60歳以上の方、入居時自立・要支援・要介護
                    shared_facilities: エントランス、食堂兼機能訓練室、個浴、大浴場、特殊浴槽、和室、談話室、シアタールーム、屋上庭園
                    business_entity: 株式会社ユニマット　リタイアメント・コミュニティ
                    official_site_url: 'https://www.unimat-rc.co.jp/shisetsu/sosigaya_871/index.html'
                    created_at: '2022-10-29T18:22:43.829+09:00'
                    updated_at: '2022-10-29T18:22:43.829+09:00'
          headers: {}
      description: Manager自身の施設概要を取得する
      tags:
        - office_overview
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/expiry'
        - $ref: '#/components/parameters/uid'
  /api/v1/manager/office_images:
    parameters: []
    post:
      summary: 事業所画像作成(ケアマネ)
      operationId: createManagerOfficeImage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeImage'
              examples:
                Example 1:
                  value:
                    id: 1
                    caption: 画像の説明テキストが入ります
                    role: thumbnail
                    image_url: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
        '400':
          $ref: '#/components/responses/BadRequest'
      description: Manager自身の事業所画像を作成する
      tags:
        - office_image
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/expiry'
        - $ref: '#/components/parameters/uid'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 画像のバイナリデータ
                caption:
                  type: string
                  description: キャプション
                  example: 画像の説明テキストが入ります
                role:
                  type: string
                  enum:
                    - thumbnail
                    - carousel
                    - feature
                  example: thumbnail
                  description: 役割。thumbnailが一覧のサムネイル。carouselが5枚のカルーセル。featureが2枚の説明画像
              required:
                - image
                - role
            examples:
              Example 1:
                value:
                  image: string
                  caption: 画像の説明テキストが入ります
                  role: thumbnail
        description: ※画像はContentTypeがapplication/jsonでは送信出来ないため、multipart/form-dataかつformDataでラップして送信すること
  '/api/v1/manager/office_images/{id}':
    parameters:
      - schema:
          type: number
          example: 1
        name: id
        in: path
        required: true
        description: 更新するOfficeImageのID
    patch:
      summary: 事業所画像更新(ケアマネ)
      operationId: updateManagerOfficeImage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeImage'
              examples:
                Example 1:
                  value:
                    id: 1
                    caption: 画像の説明テキストが入ります
                    role: thumbnail
                    image_url: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
        '400':
          $ref: '#/components/responses/BadRequest'
      description: Manager自身の事業所画像を更新する
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/expiry'
        - $ref: '#/components/parameters/uid'
      tags:
        - office_image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 画像のバイナリデータ
                caption:
                  type: string
                  description: キャプション
                  example: 画像の説明テキストが入ります
                role:
                  type: string
                  enum:
                    - thumbnail
                    - carousel
                    - feature
                  example: thumbnail
                  description: 役割。thumbnailが一覧のサムネイル。carouselが5枚のカルーセル。featureが2枚の説明画像
              required:
                - image
                - role
            examples:
              Example 1:
                value:
                  image: string
                  caption: 画像の説明テキストが入ります
                  role: thumbnail
        description: ※画像はContentTypeがapplication/jsonでは送信出来ないため、multipart/form-dataかつformDataでラップして送信すること
  /api/v1/client/reserves:
    post:
      summary: 予約作成(事業所利用者)
      operationId: createClientAppointment
      responses:
        '200':
          description: OK
      description: ホームケアを予約する
      tags:
        - reserve
    get:
      summary: 予約一覧取得(事業所利用者)
      operationId: getClientReserves
      responses:
        '200':
          description: OK
      description: 予約一覧を取得する
      tags:
        - reserve
    parameters: []
  /api/v1/manager/reserves:
    get:
      summary: 予約一覧取得(ケアマネ)
      operationId: getManagerReserves
      responses:
        '200':
          description: OK
      description: 予約一覧を取得する
      tags:
        - reserve
    parameters: []
  '/api/v1/manager/reserve/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 1
          format: int64
        description: 対象のid
    patch:
      summary: 予約更新(ケアマネ)
      operationId: updateManagerReserve
      responses:
        '200':
          description: OK
      description: 予約を更新する
      tags:
        - reserve
  /api/v1/client/thanks:
    post:
      summary: お礼投稿(事業所利用者)
      operationId: createClientThank
      responses:
        '200':
          description: OK
      tags:
        - thank
      description: お礼を投稿する
    get:
      summary: お礼一覧取得(事業所利用者)
      operationId: getClientThanks
      responses:
        '200':
          description: OK
      description: お礼一覧を取得する
      tags:
        - thank
    parameters: []
  /api/v1/manager/thanks:
    get:
      summary: お礼一覧取得(ケアマネ)
      operationId: getManagerThanks
      responses:
        '200':
          description: OK
      description: お礼一覧を取得する
      tags:
        - thank
    parameters: []
  '/api/v1/client/thank/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 1
          format: int64
        description: 対象のid
    delete:
      summary: お礼削除(事業所利用者)
      operationId: deleteClientThank
      responses:
        '200':
          description: OK
      description: お礼を削除する
      tags:
        - thank
    patch:
      summary: お礼更新(事業所利用者)
      operationId: updateClientThank
      responses:
        '200':
          description: OK
      tags:
        - thank
      description: お礼を更新する
  '/api/v1/manager/thank/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 1
          format: int64
        description: 対象のid
    delete:
      summary: お礼削除(ケアマネ)
      operationId: deleteManagerThank
      responses:
        '200':
          description: OK
      description: お礼を削除する
      tags:
        - thank
  /api/v1/client/histories:
    get:
      summary: 閲覧履歴一覧取得(事業所利用者)
      tags:
        - history
      responses:
        '200':
          description: OK
      operationId: getClientHistories
      description: 事業所の閲覧履歴を取得する
    parameters: []
  /api/v1/client/bookmarks:
    get:
      summary: ブックマーク一覧取得(事業所利用者)
      tags:
        - book_mark
      responses:
        '200':
          description: OK
      operationId: getClientBookmarks
      description: ブックマークをつけた事業所一覧を取得する
    post:
      summary: ブックマーク作成(事業所利用者)
      operationId: createClientBookmark
      responses:
        '200':
          description: OK
      tags:
        - book_mark
      description: ブックマークを作成する
    parameters: []
  '/api/v1/client/book_mark/{id}':
    delete:
      summary: ブックマーク削除(事業所利用者)
      operationId: deleteClientBookmark
      responses:
        '200':
          description: OK
      tags:
        - book_mark
      description: ブックマークを削除する
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 1
          format: int64
        description: 対象のid
  /api/v1/client/staffs:
    parameters: []
  /api/v1/manager/staffs:
    get:
      summary: スタッフ一覧取得(ケアマネ)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  office_id:
                    type: integer
                  name:
                    type: string
                  furigana:
                    type: string
                  introduction:
                    type: string
                  role:
                    type: integer
              examples:
                Example 1:
                  value:
                    - office_id: 1
                      name: サンプル太郎
                      furigana: さんぷるたろう
                      introduction: ここにスタッフの説明がはいります
                      role: 0
                    - office_id: 2
                      name: サンプル太郎2
                      furigana: さんぷるたろうに
                      introduction: ここにスタッフの説明がはいります
                      role: 1
      operationId: getManagerStaffs
      tags:
        - staff
      description: スタッフ一覧を取得する
      parameters:
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/client'
        - $ref: '#/components/parameters/expiry'
        - $ref: '#/components/parameters/uid'
    post:
      summary: スタッフ作成(ケアマネ)
      operationId: createManagerStaff
      responses:
        '200':
          description: OK
      tags:
        - staff
      description: スタッフを追加する
    parameters: []
  '/api/v1/manager/staff/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 1
          format: int64
        description: 対象のid
    delete:
      summary: スタッフ削除(ケアマネ)
      operationId: deleteManagerStaff
      responses:
        '200':
          description: OK
      tags:
        - staff
      description: スタッフを削除する
    patch:
      summary: スタッフ更新(ケアマネ)
      operationId: updateManagerStaff
      responses:
        '200':
          description: OK
      tags:
        - staff
      description: スタッフを更新する
  /api/v1/manager/office_clients:
    get:
      summary: 事業所管理の事業所利用者一覧取得(ケアマネ)
      responses:
        '200':
          description: OK
      operationId: getManagerOfficeClients
      tags:
        - office_client
      description: 事業所で管理している事業所利用者一覧を取得する
    parameters: []
    post:
      summary: 事業所管理の事業所利用者作成(ケアマネ)
      operationId: createManagerOfficeClient
      responses:
        '200':
          description: OK
      tags:
        - office_client
      description: 事業所で管理している事業所利用者を作成する
  '/api/v1/manager/office_client/{id}':
    patch:
      summary: 事業所管理の事業所利用者更新(ケアマネ)
      operationId: updateManagerOfficeClient
      responses:
        '200':
          description: OK
      tags:
        - office_client
      description: 事業所で管理している事業所利用者一覧を更新する
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 1
          format: int64
        description: 対象のid
    delete:
      summary: 事業所管理の事業所利用者削除(ケアマネ)
      operationId: deleteManagerOfficeClient
      responses:
        '200':
          description: OK
      tags:
        - office_client
      description: 事業所で管理している事業所利用者一覧を削除する
components:
  schemas:
    User:
      type: object
      title: User
      x-stoplight:
        id: ygtg1gffnd7xu
      description: 事業所利用者及び事業所代表者
      x-examples:
        example-1:
          id: 1
          name: テスト 太郎
          email: test@example.com
          tel: 090-1111-2222
          postal: '1234567'
          address: 東京都新宿区市ヶ谷本村町5番1号
          type: Client
          provider: email
          uid: test1@example.com
          allow_password_change: false
      additionalProperties: false
      properties:
        id:
          type: number
          example: 1
          description: User主キー
        name:
          type: string
          description: ユーザー名
          example: テスト 太郎
        email:
          type: string
          format: email
          example: test@example.com
          description: メールアドレス
        tel:
          type: string
          description: 電話番号
          example: 090-1111-2222
          pattern: '^0[-0-9]{11,12}$'
        postal:
          type: string
          example: '1234567'
          pattern: '^\d{7}$'
          description: 郵便番号
          maxLength: 7
        address:
          type: string
          example: 東京都新宿区市ヶ谷本村町5番1号
          description: 住所
        type:
          type: string
          example: Client
          description: STIによるユーザー識別文字列
        provider:
          type: string
          example: email
          default: email
          description: emailやOmniauth等の認証方式
        uid:
          type: string
          format: email
          example: test1@example.com
          description: ユーザー識別子
        allow_password_change:
          type: boolean
          default: false
          description: パスワード変更中判定
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - email
        - tel
        - postal
        - address
        - type
        - provider
        - uid
        - allow_password_change
    Office:
      type: object
      x-examples:
        Example 1:
          id: 1
          name: ホームケア事務所_1
          feature_title: 事業所紹介タイトル
          feature_detail: ここに事業所の特徴テキストが入ります
          workday:
            - mon
            - tue
            - wed
            - thu
            - fri
          workday_detail: 営業日時についてのテキストが入ります
          lat: '43.073211'
          lng: '41.350427'
          fax: 111-2222-3333
          nearest_station: 北12条駅 徒歩5分
      title: Office
      description: 事業所
      properties:
        id:
          type: integer
          example: 1
          description: Office主キー
        name:
          type: string
          example: ホームケア事務所_1
          description: 事業所名
        feature_title:
          type: string
          example: 事業所紹介タイトル
          description: 特徴タイトル
        feature_detail:
          type: string
          example: ここに事業所の特徴テキストが入ります
          description: 特徴詳細テキスト
        workday:
          type: array
          example:
            - mon
            - tue
            - wed
            - thu
            - fri
          description: 営業曜日
          items:
            type: string
            enum:
              - sun
              - mon
              - tue
              - wed
              - thu
              - fri
              - sat
        workday_detail:
          type: string
          example: 営業日時についてのテキストが入ります
          description: 営業曜日についての詳細テキスト
        lat:
          type: string
          example: '43.073211'
          description: 緯度
        lng:
          type: string
          example: '41.350427'
          description: 経度
        fax:
          type: string
          example: 111-2222-3333
          description: FAX番号
        nearest_station:
          type: string
          example: 北12条駅 徒歩5分
          description: 最寄り駅
      required:
        - id
        - name
        - feature_title
        - feature_detail
        - workday
        - workday_detail
        - lat
        - lng
        - fax
        - nearest_station
    OfficeOverview:
      type: object
      x-examples:
        Example 1:
          id: 1
          classify: 介護付きホーム（サービス付き高齢者向け住宅　特定施設）
          opening_date: '2022-03-11'
          room_count: 30
          requirements: 満60歳以上の方、入居時自立・要支援・要介護
          shared_facilities: エントランス、食堂兼機能訓練室、個浴、大浴場、特殊浴槽、和室、談話室、シアタールーム、屋上庭園
          business_entity: 株式会社ユニマット　リタイアメント・コミュニティ
          official_site_url: 'https://www.unimat-rc.co.jp/shisetsu/sosigaya_871/index.html'
      title: OfficeOverview
      description: 施設概要
      properties:
        id:
          type: integer
          description: OfficeOverview主キー
          example: 1
        classify:
          type: string
          description: 類型
          example: 介護付きホーム（サービス付き高齢者向け住宅　特定施設）
        opening_date:
          type: string
          description: 開設年月
          example: '2022-03-11'
          format: date
        room_count:
          type: integer
          description: 居室数
          example: 30
        requirements:
          type: string
          description: 入居時の要件
          example: 満60歳以上の方、入居時自立・要支援・要介護
        shared_facilities:
          type: string
          description: 共用設備
          example: エントランス、食堂兼機能訓練室、個浴、大浴場、特殊浴槽、和室、談話室、シアタールーム、屋上庭園
        business_entity:
          type: string
          description: 経営・事業主体
          example: 株式会社ユニマット　リタイアメント・コミュニティ
        official_site_url:
          type: string
          description: 公式サイトのURL
          example: 'https://www.unimat-rc.co.jp/shisetsu/sosigaya_871/index.html'
          format: uri
      required:
        - id
        - classify
        - opening_date
        - room_count
        - requirements
        - shared_facilities
        - business_entity
        - official_site_url
    OfficeImage:
      title: OfficeImage
      x-stoplight:
        id: 6vrskiww5y6eu
      type: object
      description: 事業所画像
      x-examples:
        Example 1:
          id: 1
          caption: 画像の説明テキストが入ります
          role: thumbnail
          image_url: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
      properties:
        id:
          type: integer
          description: OfficeImage主キー
          example: 1
        caption:
          type: string
          example: 画像の説明テキストが入ります
          description: 画像の見出しテキスト
        role:
          type: string
          enum:
            - thumbnail
            - carousel
            - feature
          description: 画像の役割
          example: thumbnail
        image_url:
          type: string
          description: 画像URL
          format: uri
          example: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
      required:
        - id
        - role
        - image_url
    OfficeStaff:
      title: OfficeStaff
      x-stoplight:
        id: u0uhoxrkdpmpu
      type: object
      description: 事業所スタッフ
      x-examples:
        Example 1:
          id: 1
          name: 田中　太郎
          furigana: たなか　たろう
          introduction: スタッフ紹介テキストが入ります
          role: worker
      properties:
        id:
          type: integer
          description: OfficeStaff主キー
          example: 1
        name:
          type: string
          example: 田中　太郎
          description: スタッフ名
        furigana:
          type: string
          example: たなか　たろう
          description: ふりがな
        introduction:
          type: string
          example: スタッフ紹介テキストが入ります
          pattern: ''
          description: スタッフ紹介文
        role:
          type: string
          example: worker
          enum:
            - worker
            - care_manager
          description: スタッフロール
      required:
        - id
        - name
        - furigana
        - introduction
        - role
    Paginate:
      title: Paginate
      x-stoplight:
        id: bebxbyo6jawmb
      type: object
      description: ページネーションのレスポンス
      x-examples:
        Example 1:
          current_page: 2
          prev_page: null
          next_page: 2
          total_page: 10
      additionalProperties: false
      properties:
        current_page:
          type: integer
          description: 現在のページ
          example: 2
        prev_page:
          type: integer
          description: 前のページ
          example: null
          nullable: true
        next_page:
          type: integer
          example: 2
          description: 次のページ
          nullable: true
        total_page:
          type: integer
          example: 10
          description: 総ページ数
      required:
        - current_page
        - prev_page
        - next_page
        - total_page
  responses:
    AuthSuccess:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
                description: successまたはerror
                readOnly: true
              data:
                $ref: '#/components/schemas/User'
            required:
              - data
          examples:
            example-1:
              value:
                status: success
                data:
                  id: 1
                  name: テスト 太郎
                  email: test@example.com
                  tel: 090-1111-2222
                  postal: '1234567'
                  address: 東京都新宿区市ヶ谷本村町5番1号
                  type: Client
                  provider: email
                  uid: test1@example.com
                  allow_password_change: false
                created_at: '2019-08-24T14:15:22Z'
                updated_at: '2019-08-24T14:15:22Z'
      headers:
        access-token:
          schema:
            type: string
            example: 7sbMLu90-fDnajzasuhOTQ
          description: トークン認証に必要なヘッダー(1/4)
        client:
          schema:
            type: string
            example: xJ-BFLHzY_XNMX_cjsQnPw
          description: トークン認証に必要なヘッダー(2/4)
        expiry:
          schema:
            type: string
            example: '1660145125'
          description: トークン認証に必要なヘッダー(3/4)
        uid:
          schema:
            type: string
            example: test1@example.com
          description: トークン認証に必要なヘッダー(4/4)
    BadRequest:
      description: 'バリデーションチェック失敗時。status: :bad_requestで返ってくるときの値。'
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                description: エラーの値
                items:
                  type: string
                example:
                  - 類型は200文字以内で入力してください
            required:
              - errors
    SearchResult:
      description: エリア検索、現在地検索、単語検索のレスポンス
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              offices:
                type: array
                items:
                  type: object
                  additionalProperties: false
                  properties:
                    id:
                      type: integer
                      description: 事業所のid
                      example: 1
                    name:
                      type: string
                      example: 祖師谷ホームケアそよ風
                      description: 事業所名
                    nearest_station:
                      type: string
                      example: 札幌市南北線 北12条駅
                      description: 最寄り駅
                    stuff_count:
                      type: integer
                      example: 30
                      description: 事業所に所属しているスタッフの総人数
                    is_bookmark:
                      type: boolean
                      default: false
                      description: 現在のユーザーがこの事務所をブックマークしているかどうか
                    tel:
                      type: string
                      example: 事業所の電話番号
                      description: 080-2916-9802
                    feature_title:
                      type: string
                      example: 事業所紹介タイトル
                      description: 事業所紹介タイトル
                    workday:
                      type: array
                      example:
                        - mon
                        - tue
                        - wed
                        - thu
                        - fri
                      description: 営業曜日
                      items:
                        type: string
                        enum:
                          - sun
                          - mon
                          - tue
                          - wed
                          - thu
                          - fri
                          - sat
                    thumbnail_image:
                      type: string
                      format: uri
                      example: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
                      description: サムネイルのイメージ画像
                      nullable: true
                  required:
                    - id
                    - name
                    - nearest_station
                    - stuff_count
                    - is_bookmark
                    - tel
                    - feature_title
                    - workday
                    - thumbnail_image
              paginate:
                $ref: '#/components/schemas/Paginate'
            required:
              - offices
              - paginate
          examples:
            Example 1:
              value:
                offices:
                  - id: 1
                    name: 祖師谷ホームケアそよ風
                    nearest_station: 札幌市南北線 北12条駅
                    stuff_count: 30
                    is_bookmark: false
                    tel: 事業所の電話番号
                    feature_title: 事業所紹介タイトル
                    workday:
                      - mon
                      - tue
                      - wed
                      - thu
                      - fri
                    thumbnail_image: 'http://localhost:3000/rails/active_storage/disk/eyJfcmF/test_image.jpg'
                paginate:
                  current_page: 2
                  prev_page: null
                  next_page: 2
                  total_page: 10
  requestBodies: {}
  parameters:
    access-token:
      name: access-token
      in: header
      required: true
      schema:
        type: string
        example: 7sbMLu90-fDnajzasuhOTQ
      description: トークン認証に必要なヘッダー(1/4)
    client:
      name: client
      in: header
      required: true
      schema:
        type: string
        example: xJ-BFLHzY_XNMX_cjsQnPw
      description: トークン認証に必要なヘッダー(2/4)
    expiry:
      name: expiry
      in: header
      required: true
      schema:
        type: string
        example: '1660145125'
      description: トークン認証に必要なヘッダー(3/4)
    uid:
      name: uid
      in: header
      required: true
      schema:
        type: string
        example: test1@example.com
      description: トークン認証に必要なヘッダー(4/4)
  securitySchemes: {}
tags:
  - name: auth
    description: 認証
  - name: book_mark
    description: ブックマーク
  - name: client
    description: 事業所利用者が使用するエンドポイント
  - name: health_check
    description: ヘルスチェック関連
  - name: HeartRailsGeoAPI
    description: 外部APIサービスであるHearRailsGeoAPI関連
  - name: history
    description: 閲覧履歴
  - name: office
    description: 事業所
  - name: office_client
    description: 事業所で管理しているクライアント
  - name: office_image
    description: 事業所画像
  - name: office_overview
    description: 施設概要
  - name: reserve
    description: 予約
  - name: staff
    description: 事業所スタッフ
  - name: thank
    description: お礼
